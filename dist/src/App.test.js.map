{"version":3,"sources":["../../src/App.test.js"],"names":["jsonld","linked","link","console","log"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;;;;AAEA,IAAIA,SAAS,CACT;AACI,WAAO,4BADX;AAEI,aAAS,CACL,kCADK,CAFb;AAKI,yCAAqC,CACjC;AACI,eAAO;AADX,KADiC;;AALzC,CADS,EAcT;AACI,WAAO,4BADX;AAEI,aAAS,CACL,mCADK,CAFb;AAKI,yCAAqC,CACjC;AACI,eAAO;AADX,KADiC;;AALzC,CAdS,CAAb;;AA6BA,IAAIC,SAAS,uBAAaC,IAAb,CAAkBF,MAAlB,EAA0B,IAA1B,CAAb;;AAEAG,QAAQC,GAAR,CAAYH,MAAZ;;AAGA","file":"App.test.js","sourcesContent":["import React from \"react\";\nimport it from \"it-is\";\nimport RdfToJsonLD from \"./RdfToJsonLD.js\";\nimport fs from \"fs\";\nimport Shacl from \"./SHACL/Shacl.js\";\n\nimport JsonLdhelper from \"./JsonLd/json-ld-helper.js\";\n\nlet jsonld = [\n    {\n        \"@id\": \"http://example.org/library\",\n        \"@type\": [\n            \"http://example.org/vocab#Library\"\n        ],\n        \"http://example.org/vocab#contains\": [\n            {\n                \"@id\": \"http://example.org/library/the-republic\"\n            }\n        ]\n\n\n    },\n    {\n        \"@id\": \"http://example.org/library\",\n        \"@type\": [\n            \"http://example.org/vocab#Library2\"\n        ],\n        \"http://example.org/vocab#contains\": [\n            {\n                \"@id\": \"http://example.org/library/the-republic2\"\n            }\n        ]\n\n\n    }\n];\n\nlet linked = JsonLdhelper.link(jsonld, true);\n\nconsole.log(linked)\n\n\n/*\n\n\n fs.readdir(\"../test-files/\", (err, testCases) => {\n // console.log(testCases);\n testCases.forEach(testCase => {\n // console.log(testCase);\n\n new Promise(function (resolve, reject) {\n fs.readFile(\"../test-files/\" + testCase + \"/shacl.ttl\", \"utf-8\", (err, shacl) => {\n RdfToJsonLD\n .rdfToJsonld(shacl).then(jsonld => resolve(jsonld))\n // .catch(error => console.log(error));\n })\n }\n )\n .then(shacl => {\n\n fs.readdir(\"../test-files/\" + testCase + \"/pass\", (err, passFiles) => {\n\n passFiles.forEach(pass => {\n // console.log(pass);\n\n let shaclValidator = new Shacl(shacl);\n\n fs.readFile(\"../test-files/\" + testCase + \"/pass/\" + pass, \"utf-8\", (err, turtle) => {\n RdfToJsonLD\n .rdfToJsonld(turtle)\n .catch(error => console.error(`Error while reading ${testCase}/pass/${pass}\\n`, error))\n .then(jsonld => {\n\n let valid = true;\n\n shaclValidator.validate(jsonld, failure => {\n if (failure.severity === Shacl.Violation) {\n valid = false;\n console.log(failure);\n }\n });\n\n if(!valid){\n console.log(\"here\")\n }\n it(valid).equal(true, `Validation should have passed for: ${testCase}/pass/${pass}`);\n\n })\n .catch(error => console.error(`Error while reading or validating ${testCase}/pass/${pass}\\n`, error));\n });\n\n });\n });\n\n\n fs.readdir(\"../test-files/\" + testCase + \"/fail\", (err, failFile) => {\n\n\n failFile.forEach(fail => {\n let shaclValidator = new Shacl(shacl);\n\n fs.readFile(\"../test-files/\" + testCase + \"/fail/\" + fail, \"utf-8\", (err, turtle) => {\n RdfToJsonLD\n .rdfToJsonld(turtle)\n .catch(error => console.error(`Error while reading ${testCase}/fail/${fail}\\n`, error))\n .then(jsonld => {\n\n let valid = true;\n\n shaclValidator.validate(jsonld, failure => {\n if (failure.severity === Shacl.Violation) {\n valid = false;\n // console.log(failure);\n }\n });\n\n it(valid).equal(false, `Validation should have failed for: ${testCase}/fail/${fail}`);\n\n })\n .catch(error => console.log(`Error while reading or validating ${testCase}/fail/${fail}`, error));\n });\n })\n });\n\n\n });\n\n\n });\n });\n */\n"]}