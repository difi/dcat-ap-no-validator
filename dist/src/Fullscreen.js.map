{"version":3,"sources":["../../src/Fullscreen.js"],"names":["Fullscreen","state","accept","files","dropzoneActive","shacl","validationErrors","loading","progress","validate","bind","that","asJsonLd","then","setState","catch","console","log","err","file","syntaxError","reader","FileReader","onload","e","text","result","background","name","indexOf","simpleFetch","url","fetch","response","json","promises","flatten","jsonld","expand","turtleFiles","Promise","all","values","push","rdfToJsonld","forEach","concat","value","error","window","setTimeout","readAsText","event","target","overlayStyle","position","top","right","bottom","left","height","padding","textAlign","color","marginRight","forMangeFiler","length","gyldig","filter","Violation","severity","ikkeGyldig","groupedValidationWarnings","Warning","targetClass","path","groupedValidationViolations","marginTop","marginLeft","minHeight","border","onDrop","onDragEnter","onDragLeave","width","paddingTop","Object","keys","map","id","Component","RenderError","props","group","prefix","predikat","listStyle","message"],"mappings":"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","file":"Fullscreen.js","sourcesContent":["import React from 'react';\nimport Dropzone from 'react-dropzone'\nimport DcatApNoShacl from './dcat-ap-no-shacl.js'\nimport Shacl from './SHACL/Shacl.js';\nimport RdfToJsonLD from \"./RdfToJsonLD.js\";\nimport ValidationError from \"./SHACL/ValidationError.js\";\nimport 'whatwg-fetch'\nimport Spinner from 'react-spinner-material';\n\nimport JSONLD from 'jsonld'\n\nclass Fullscreen extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            accept: '',\n            files: [],\n            dropzoneActive: false,\n            shacl: null,\n            validationErrors: [],\n            loading: false,\n            progress: \"0 %\",\n        }\n\n        this.validate = this.validate.bind(this);\n    }\n\n    componentWillMount() {\n\n        let that = this;\n        DcatApNoShacl.asJsonLd().then(shacl => {\n            that.setState({shacl: new Shacl(shacl)})\n        }).catch(err => {\n            console.log(err)\n        })\n\n\n    }\n\n    onDragEnter() {\n        this.setState({\n            dropzoneActive: true\n        });\n    }\n\n    onDragLeave() {\n        this.setState({\n            dropzoneActive: false\n        });\n    }\n\n    onDrop(files) {\n\n        this.setState({\n            files,\n            dropzoneActive: false,\n            validationErrors: []\n        });\n\n        this.validate(files[0]);\n\n    }\n\n    validate(file) {\n        console.log(file)\n\n        this.setState({syntaxError: null})\n        this.setState({loading: true})\n\n        let reader = new FileReader();\n\n\n        reader.onload = function (e) {\n            let text = reader.result;\n\n            let background = function () {\n                if (file.name.indexOf(\".json\") > 0 || file.name.indexOf(\".jsonld\") > 0) {\n                    console.log(\"JSONLD\")\n                } else {\n                    //assume turtle\n\n                    let simpleFetch = function(url){\n                        return fetch(\"vocabularies/\"+url)\n                            .then(function (response) {\n                                return response.json()\n                            })\n                            .then(jsonld => {\n                                return JSONLD.promises.flatten(jsonld).then(JSONLD.promises.expand)\n                            })\n                    };\n\n                    let turtleFiles = [\n                        simpleFetch(\"ADMS_SKOS_v1.00.jsonld\"),\n                        simpleFetch(\"ADMS_SW_v1-00_Taxonomies.jsonld\"),\n                        simpleFetch(\"coporateboadies-skos.jsonld\"),\n                        simpleFetch(\"difi-los.jsonld\"),\n                        simpleFetch(\"freq.jsonld\"),\n                        simpleFetch(\"languages-skos.jsonld\"),\n                        simpleFetch(\"cldterms.jsonld\"),\n                    ]\n\n                    Promise.all(turtleFiles).then(values => {\n\n                        values.push(\"\");\n\n                        RdfToJsonLD\n                            .rdfToJsonld(text)\n                            .then(jsonld => {\n\n                                values.forEach(value => jsonld = jsonld.concat(value))\n\n                                return jsonld\n\n                            })\n                            .then(jsonld => {\n                               return JSONLD.promises.flatten(jsonld).then(JSONLD.promises.expand)\n                            })\n                            .then(jsonld => {\n\n                                this.state.shacl.validate(jsonld, error => {\n                                    let validationErrors = this.state.validationErrors;\n                                    validationErrors.push(error);\n                                    this.setState({validationErrors})\n                                    this.setState({loading: false})\n                                });\n\n                                this.setState({loading: false})\n\n                            })\n\n                            .catch(error => {\n                                console.error(error)\n                                this.setState({loading: false})\n                                this.setState({syntaxError: \":(\"})\n                            })\n                    })\n                }\n            }\n\n            background = background.bind(this);\n            window.setTimeout(background, 100);\n\n\n        };\n\n        reader.onload = reader.onload.bind(this);\n\n\n        reader.readAsText(file);\n\n\n    }\n\n    applyMimeTypes(event) {\n        this.setState({\n            accept: event.target.value\n        });\n    }\n\n    render() {\n        const {accept, files, dropzoneActive} = this.state;\n        const overlayStyle = {\n            position: 'absolute',\n            top: 12,\n            right: 0,\n            bottom: 0,\n            left: 12,\n            height: 268,\n            padding: '2.5em 0',\n            background: 'rgba(0,0,0,0.5)',\n            textAlign: 'center',\n            color: '#fff',\n            marginRight: 12,\n        };\n\n\n        console.log(this.state);\n\n        let loading = this.state.loading;\n\n        if (!this.state.shacl) {\n            return <h4>Laster</h4>\n        }\n\n        let forMangeFiler = files.length > 1\n\n        let syntaxError = this.state.syntaxError;\n\n\n        let gyldig = files.length === 1 && this.state.validationErrors.filter(error => Shacl.Violation == error.severity).length === 0\n        let ikkeGyldig = files.length === 1 && this.state.validationErrors.filter(error => Shacl.Violation == error.severity).length > 0\n\n        if (syntaxError) {\n            gyldig = false;\n            ikkeGyldig = false;\n        }\n\n        let groupedValidationWarnings = {};\n        this.state.validationErrors.filter(error => Shacl.Warning == error.severity).forEach(error => {\n\n            if (!groupedValidationWarnings[error.jsonld[\"@id\"]]) {\n                groupedValidationWarnings[error.jsonld[\"@id\"]] = {\"@type\": error.targetClass};\n            }\n            if (!groupedValidationWarnings[error.jsonld[\"@id\"]][error.path]) {\n                groupedValidationWarnings[error.jsonld[\"@id\"]][error.path] = [];\n            }\n            groupedValidationWarnings[error.jsonld[\"@id\"]][error.path].push(error);\n\n        });\n\n\n        let groupedValidationViolations = {};\n        this.state.validationErrors.filter(error => Shacl.Violation == error.severity).forEach(error => {\n\n            if (!error.jsonld) {\n                console.error(error)\n                //return;\n            }\n\n\n            if (!groupedValidationViolations[error.jsonld[\"@id\"]]) {\n                groupedValidationViolations[error.jsonld[\"@id\"]] = {\"@type\": error.targetClass};\n            }\n            if (!groupedValidationViolations[error.jsonld[\"@id\"]][error.path]) {\n                groupedValidationViolations[error.jsonld[\"@id\"]][error.path] = [];\n            }\n            groupedValidationViolations[error.jsonld[\"@id\"]][error.path].push(error);\n\n        });\n\n\n        return (\n            <div style={{marginTop: -10, padding: 10, marginRight: -15, marginLeft: -15, minHeight: 300}}>\n                {/*<div className={gyldig ? \"faded-green-background\" : ikkeGyldig ? \"faded-red-background\" : \"\"} style={{marginTop: -10, padding: 10, marginRight: -15, marginLeft: -15, minHeight: 1000}}>*/}\n\n                <div >\n                    <Dropzone\n                        disableClick\n                        style={{border: \"dashed\"}}\n                        accept={accept}\n                        onDrop={this.onDrop.bind(this)}\n                        onDragEnter={this.onDragEnter.bind(this)}\n                        onDragLeave={this.onDragLeave.bind(this)}\n                    >\n                        { dropzoneActive && <div style={overlayStyle}>Slipp</div> }\n                        <div style={{height: 240, width: \"100%\"}}>\n\n                            <h3 style={{textAlign: \"center\", paddingTop: 90}}>Slipp en DCAT fil her</h3>\n                            {forMangeFiler && <h4 style={{textAlign: \"center\"}}>For mange filer!</h4>}\n                            {!loading && gyldig && <h4 style={{textAlign: \"center\"}} className=\"green\"><span className=\"lighter-black\">\"{this.state.files[0].name}\"</span> er gyldig <span >✓</span></h4>}\n                            {!loading && ikkeGyldig && <h4 style={{textAlign: \"center\"}} className=\"red\"><span className=\"lighter-black\">\"{this.state.files[0].name}\"</span> er ikke gyldig <span >✗</span></h4>}\n                            {!loading && syntaxError && <h4 style={{textAlign: \"center\"}} className=\"red\"><span className=\"lighter-black\">\"{this.state.files[0].name}\"</span> har syntax feil <span >✗</span></h4>}\n                            {loading && <h4 style={{textAlign: \"center\"}}>Validerer <span className=\"lighter-black\">\"{this.state.files[0].name}\"</span> <Spinner width={20} height={20} spinnerColor={\"#333\"} spinnerWidth={2} show={true} /></h4>}\n                        </div>\n                    </Dropzone>\n                </div>\n                <div>\n                    <h2><a className=\"link\" href=\"#_Avvik\" id=\"_Avvik\">Avvik</a></h2>\n                    {Object.keys(groupedValidationViolations).map(id =>\n                        <RenderError id={id} group={groupedValidationViolations}/>\n                    )}\n                    {this.state.validationErrors.filter(error => Shacl.Violation == error.severity).length == 0 && <p>Ingen avvik</p>}\n\n                </div>\n                <div>\n                    <h2><a className=\"link\" href=\"#_Anbefalinger\" id=\"_Anbefalinger\">Anbefalinger</a></h2>\n                    {Object.keys(groupedValidationWarnings).map(id =>\n                        <RenderError id={id} group={groupedValidationWarnings}/>\n                    )}\n                    {this.state.validationErrors.filter(error => Shacl.Warning == error.severity).length == 0 && <p>Ingenting å forbedre</p>}\n\n                    {/*<ul>*/}\n                    {/*{this.state.validationErrors.filter(error => Shacl.Warning == error.severity).map((error, index) => <RenderError error={error} key={index}/>)}*/}\n                    {/*</ul>*/}\n                </div>\n\n            </div>\n        )\n            ;\n    }\n}\n\nclass RenderError extends React.Component {\n\n\n    render() {\n\n        let id = this.props.id;\n        let group = this.props.group;\n\n        return <span>\n            <h4>Ressurs <span style={{color: \"darkgreen\"}}>{id}</span></h4>\n                            <h6>Type: <span style={{color: \"darkgreen\"}}>{ValidationError.prefix(group[id][\"@type\"])}</span></h6>\n                            <ul>\n                                {Object.keys(group[id])\n                                    .filter(predikat => !predikat.indexOf(\"@\") == 0)\n                                    .map(predikat =>\n                                        <li style={{listStyle: \"none\"}}>\n                                            <div>\n                                                <h7 style={{color: \"darkgreen\"}}>{ValidationError.prefix(predikat)}</h7>\n\n                                                <ul>\n                                                    {Object.values(group[id][predikat]).map(error => {\n                                                            return <li style={{listStyle: \"none\"}}>{error.message}</li>\n                                                        }\n                                                    )}\n                                                </ul>\n\n                                            </div>\n                                        </li>\n                                    )}\n                            </ul>\n            <hr/>\n                        </span>;\n\n\n    }\n\n\n}\n\nexport default Fullscreen;"]}